
/*
 * ! @chakra-ui/vue v0.10.2 by Jonathan Bakebwa @codebender828
 * MIT License
 * https://github.com/chakra-ui/chakra-ui-vue
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var css = require('@emotion/css');
require('vue');
var colorModeObserver = require('./color-mode-observer-fffa3a3b.js');

/**
 * Hey! Welcome to @chakra-ui/vue CThemeProvider
 *
 * The CThemeProvider componeent provides theme context to all it's
 * children.
 *
 * @see Docs     https://vue.chakra-ui.com/getting-started
 * @see Source   https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CThemeProvider/CThemeProvider.js
 */
/**
 * CThemeProvider component
 */

var CThemeProvider = {
  name: 'CThemeProvider',
  provide: function provide() {
    var this$1 = this;
    return {
      $chakraTheme: function $chakraTheme() {
        return this$1.theme;
      },
      $chakraIcons: this.icons,

      /**
       * By default the ThemeProvider exposes a colorMode value of light
       * If no `ColorModeProvider` is provided in children/ consumer app, all chakra
       * components will consume the $chakraColorMode from here.
       */
      $chakraColorMode: function $chakraColorMode() {
        return 'light';
      }
    };
  },
  props: {
    rootKey: {
      type: String,
      default: ':root'
    }
  },
  computed: {
    icons: function icons() {
      return this.$chakra ? this.$chakra.icons : {};
    },
    theme: function theme() {
      return this.$chakra.theme;
    }
  },
  watch: {
    theme: {
      immediate: true,
      handler: function handler(newVal) {
        colorModeObserver.colorModeObserver.theme = newVal;
        this.updateGlobalCssVars();
      }
    },
    icons: {
      immediate: true,
      handler: function handler(newVal) {
        colorModeObserver.colorModeObserver.icons = newVal;
      }
    }
  },
  methods: {
    updateGlobalCssVars: function updateGlobalCssVars() {
      var obj;
      var rootKey = this.rootKey || ':root';
      css.injectGlobal((obj = {}, obj[rootKey] = this.theme.__cssVars, obj));
    }
  },
  render: function render(h) {
    return h('div', {
      attrs: {
        id: '__chakra-app',
        'data-chakra-component': 'CThemeProvider'
      }
    }, this.$slots.default);
  }
};

exports.default = CThemeProvider;
