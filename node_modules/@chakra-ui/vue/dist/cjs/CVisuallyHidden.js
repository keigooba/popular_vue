
/*
 * ! @chakra-ui/vue v0.10.2 by Jonathan Bakebwa @codebender828
 * MIT License
 * https://github.com/chakra-ui/chakra-ui-vue
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var css = require('@emotion/css');

/**
 * Hey! Welcome to @chakra-ui/vue VisuallyHidden
 *
 * This component is used to visually hide elements that have custom
 * appearance. For example, see the CControlBox.
 *
 * @see Source   https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CVisuallyHidden/CVisuallyHidden.js
 */
function objectWithoutProperties(obj, exclude) {
  var target = {};

  for (var k in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];
  }

  return target;
}
/**
 * CVisuallyHidden component
 *
 * the visually hidden wrapper element
 */

var CVisuallyHidden = {
  name: 'CVisuallyHidden',
  functional: true,
  props: {
    as: {
      type: String,
      default: 'div'
    }
  },
  render: function render(h, ref) {
    var props = ref.props;
    var data = ref.data;
    var slots = ref.slots;
    var listeners = ref.listeners;
    var rest$1 = objectWithoutProperties(ref, ["props", "data", "slots", "listeners"]);
    var attrs = data.attrs;
    var domProps = data.domProps;
    var on = data.on;
    var className = css.css({
      border: '0px',
      clip: 'rect(0px, 0px, 0px, 0px)',
      height: "" + (attrs && attrs.w || '1px'),
      width: "" + (attrs && attrs.h || '1px'),
      margin: '-1px',
      padding: '0px',
      overflow: 'hidden',
      whiteSpace: 'nowrap',
      position: "" + (attrs && attrs.pos || 'absolute')
    });
    return h(props.as, {
      class: [className],
      attrs: Object.assign({}, attrs || {}, {
        'data-chakra-component': 'CVisuallyHidden'
      }),
      domProps: domProps,
      on: Object.assign({}, listeners, on)
    }, slots().default);
  }
};

exports.default = CVisuallyHidden;
