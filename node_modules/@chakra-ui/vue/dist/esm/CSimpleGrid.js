
/*
 * ! @chakra-ui/vue v0.10.2 by Jonathan Bakebwa @codebender828
 * MIT License
 * https://github.com/chakra-ui/chakra-ui-vue
 */

import { Z as _typeof, R as createStyledAttrsMixin } from './index-88b4bf19.js';
import './index-980f0b61.js';
import '@emotion/css';
import 'vue';
import './color-mode-observer-5bf3a66d.js';
import { a as SNA } from './props.types-26e3a1e7.js';
import { CGrid } from './CGrid.js';

/**
 * These helper functions are modified versions of the amazing work done by rebass library abd chakra-ui
 * https://github.com/rebassjs/rebass/blob/master/packages/layout/src/index.js
 */
var px = function px(n) {
  return typeof n === 'number' ? n + 'px' : n;
};

var widthToColumns = function widthToColumns(width) {
  if (Array.isArray(width)) {
    return width.map(widthToColumns);
  }

  if (width !== null && _typeof(width) === 'object' && Object.keys(width).length > 0) {
    var acc = {};

    for (var key in width) {
      acc[key] = "repeat(auto-fit, minmax(" + px(width[key]) + ", 1fr))";
    }

    return acc;
  }

  if (width != null) {
    return "repeat(auto-fit, minmax(" + px(width) + ", 1fr))";
  }

  return null;
};
var countToColumns = function countToColumns(count) {
  if (Array.isArray(count)) {
    return count.map(countToColumns);
  }

  if (count !== null && _typeof(count) === 'object' && Object.keys(count).length > 0) {
    var acc = {};

    for (var key in count) {
      acc[key] = "repeat(" + count[key] + ", 1fr)";
    }

    return acc;
  }

  if (count != null) {
    return "repeat(" + count + ", 1fr)";
  }

  return null;
};

/**
 * Hey! Welcome to @chakra-ui/vue Simple Grid
 *
 * SimpleGrid provides a friendly interface to create
 * responsive grid layouts with ease.
 *
 * @see Docs     https://vue.chakra-ui.com/simplegrid
 * @see Source   https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CSimpleGrid/CSimpleGrid.js
 */
/**
 * CSimpleGrid component
 *
 * The simple grid component provides basic grid functionalities.
 *
 * @extends CGrid
 * @see Docs https://vue.chakra-ui.com/select
 */

var CSimpleGrid = {
  name: 'CSimpleGrid',
  mixins: [createStyledAttrsMixin('CSimpleGrid')],
  props: {
    columns: SNA,
    spacingX: SNA,
    spacingY: SNA,
    spacing: SNA,
    minChildWidth: SNA
  },
  computed: {
    templateColumns: function templateColumns() {
      return this.minChildWidth ? widthToColumns(this.minChildWidth) : countToColumns(this.columns);
    }
  },
  render: function render(h) {
    return h(CGrid, {
      class: this.className,
      props: {
        gap: this.spacing,
        columnGap: this.spacingX,
        rowGap: this.spacingY,
        templateColumns: this.templateColumns
      },
      attrs: this.computedAttrs
    }, this.$slots.default);
  }
};

export default CSimpleGrid;
