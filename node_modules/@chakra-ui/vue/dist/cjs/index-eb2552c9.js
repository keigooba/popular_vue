
/*
 * ! @chakra-ui/vue v0.10.2 by Jonathan Bakebwa @codebender828
 * MIT License
 * https://github.com/chakra-ui/chakra-ui-vue
 */

'use strict';

var utils = require('./index-a67b3d6b.js');
var props_types = require('./props.types-b9d2d3c4.js');

var flexProps = {
  as: {
    type: String,
    default: 'div'
  },
  align: props_types.SNA,
  justify: props_types.SNA,
  wrap: props_types.SNA,
  direction: props_types.SNA,
  size: props_types.SNA
};

/**
 * Hey! Welcome to @chakra-ui/vue Flex
 *
 * `CFlex` is `CBox` with `display: flex` and comes with
 * helpful style shorthands. It renders a `div` element.
 *
 * @see Docs     https://vue.chakra-ui.com/flex
 * @see Source   https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CFlex/CFlex.js
 */
/**
 * CFlex component
 *
 * `CFlex` is `CBox` with display: flex and comes with helpful style shorthands.
 *
 * @see Docs https://vue.chakra-ui.com/flex
 */

var CFlex = {
  name: 'CFlex',
  mixins: [utils.createStyledAttrsMixin('CFlex')],
  props: flexProps,
  computed: {
    componentStyles: function componentStyles() {
      return {
        display: 'flex',
        flexDirection: this.direction,
        alignItems: this.align,
        justifyContent: this.justify,
        flexWrap: this.wrap,
        h: this.size,
        w: this.size
      };
    }
  },
  render: function render(h) {
    return h(this.as, {
      class: this.className,
      attrs: this.computedAttrs,
      on: this.computedListeners
    }, this.$slots.default);
  }
};

exports.CFlex = CFlex;
exports.flexProps = flexProps;
