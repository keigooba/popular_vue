
/*
 * ! @chakra-ui/vue v0.10.2 by Jonathan Bakebwa @codebender828
 * MIT License
 * https://github.com/chakra-ui/chakra-ui-vue
 */

import { R as createStyledAttrsMixin } from './index-88b4bf19.js';
import './index-980f0b61.js';
import '@emotion/css';
import 'vue';
import './color-mode-observer-5bf3a66d.js';

/**
 * Hey! Welcome to @chakra-ui/vue Divider
 *
 * Dividers are used to display a thin horizontal or vertical line.
 *
 * @see Docs     https://vue.chakra-ui.com/divider
 * @see Source   https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CDivider/CDivider.js
 * @see A11y     https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CDivider/accessibility.md
 */
/**
 * CDivider component
 *
 * Creates a horizontal or vertical dividing rule between sibling
 * elements
 *
 * @see Docs https://vue.chakra-ui.com/divider
 */

var CDivider = {
  name: 'CDivider',
  mixins: [createStyledAttrsMixin('CDivider')],
  props: {
    orientation: {
      type: String,
      default: 'horizontal'
    }
  },
  computed: {
    borderProps: function borderProps() {
      return this.orientation === 'vertical' ? {
        borderLeft: '0.0625rem solid',
        height: 'auto',
        mx: 2
      } : {
        borderBottom: '0.0625rem solid',
        width: 'auto',
        my: 2
      };
    },
    componentStyles: function componentStyles() {
      return Object.assign({}, {
        border: 0
      }, this.borderProps, {
        opacity: 0.6,
        borderColor: 'inherit'
      });
    }
  },
  render: function render(h) {
    return h('hr', {
      class: this.className,
      attrs: Object.assign({}, {
        'aria-orientation': this.orientation
      }, this.computedAttrs)
    });
  }
};

export default CDivider;
