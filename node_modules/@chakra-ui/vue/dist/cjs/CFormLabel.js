
/*
 * ! @chakra-ui/vue v0.10.2 by Jonathan Bakebwa @codebender828
 * MIT License
 * https://github.com/chakra-ui/chakra-ui-vue
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var utils = require('./index-a67b3d6b.js');
require('./index-1b221f99.js');
require('@emotion/css');
require('vue');
require('./color-mode-observer-fffa3a3b.js');
var CBox = require('./CBox.js');
var formcontrol_props = require('./formcontrol.props-0174f072.js');

/**
 * Hey! Welcome to @chakra-ui/vue CFormLabel
 *
 * Label for the Form input
 *
 * @see Docs     https://vue.chakra-ui.com/formcontrol
 * @see Source   https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CFormLabel/CFormLabel.js
 * @see A11y     https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CFormLabel/accessibility.md
 * @see WAI      https://www.w3.org/WAI/tutorials/forms/
 */
function objectWithoutProperties(obj, exclude) {
  var target = {};

  for (var k in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];
  }

  return target;
}
/**
 * CRequiredIndicator component
 *
 * Indicator shown if `isRequired` is received from context.
 *
 * @extends CBox
 * @see Docs https://vue.chakra-ui.com/formcontrol
 */

var CRequiredIndicator = {
  name: 'CRequiredIndicator',
  functional: true,
  inject: ['$chakraColorMode'],
  render: function render(h, ref) {
    var data = ref.data;
    var injections = ref.injections;
    var rest$1 = objectWithoutProperties(ref, ["data", "injections"]);
    var rest = rest$1;
    var colorMode = injections.$chakraColorMode();
    var colors = {
      light: 'red.500',
      dark: 'red.300'
    };
    var color = colors[colorMode];
    return h(CBox.default, Object.assign({}, rest, {
      attrs: Object.assign({}, {
        as: 'span',
        ml: 1,
        color: color,
        'aria-hidden': true
      }, data.attrs, {
        'data-chakra-component': 'CRequiredIndicator'
      })
    }), '*');
  }
};
/**
 * CFormLabel component
 *
 * Label for the form input.
 *
 * @extends CBox
 * @see Docs https://vue.chakra-ui.com/formcontrol
 */

var CFormLabel = {
  name: 'CFormLabel',
  mixins: [utils.createStyledAttrsMixin('CFormLabel')],
  inject: {
    $useFormControl: {
      default: null
    }
  },
  props: formcontrol_props.formControlProps,
  computed: {
    formControl: function formControl() {
      return utils.runIfFn(this.$useFormControl, this.$props);
    },
    componentStyles: function componentStyles() {
      return {
        fontSize: 'md',
        pr: '12px',
        pb: '4px',
        opacity: this.formControl.isDisabled ? '0.4' : '1',
        fontWeight: 'medium',
        fontFamily: 'body',
        textAlign: 'left',
        verticalAlign: 'middle',
        display: 'inline-block'
      };
    }
  },
  render: function render(h) {
    return h('label', {
      class: [this.className],
      attrs: this.computedAttrs,
      on: this.computedListeners
    }, this.$slots.default.concat([this.formControl.isRequired && h(CRequiredIndicator)]));
  }
};

exports.default = CFormLabel;
