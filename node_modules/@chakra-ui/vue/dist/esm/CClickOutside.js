
/*
 * ! @chakra-ui/vue v0.10.2 by Jonathan Bakebwa @codebender828
 * MIT License
 * https://github.com/chakra-ui/chakra-ui-vue
 */

import { o as canUseDOM } from './index-88b4bf19.js';
import './index-980f0b61.js';
import '@emotion/css';
import 'vue';
import './color-mode-observer-5bf3a66d.js';

/**
 * Hey! Welcome to @chakra-ui/vue CClickOutside
 *
 * The Click Outside component is used to call an event if a user clicks anywhere outside this element.
 * It also accepts a whitelist of elements to ignore when the `do()` function is called.
 *
 * Note:
 * This component is mostly used for internal use, and is not listed in Chakra UI Vue docs.
 *
 **/
/**
 * CClickOutside component
 *
 * The component that listens to DOM click events and
 * executes a function based on component props and whitelisted nodes.
 *
 */

var CClickOutside = {
  name: 'CClickOutside',
  props: {
    whitelist: Array,
    do: Function,
    isDisabled: Boolean
  },
  created: function created() {
    var this$1 = this;

    if (!this.isDisabled) {
      var listener = function listener(e, el) {
        if (e.target === el || el.contains(e.target) || this$1.whitelist.includes(e.target)) {
          return;
        }

        if (this$1.do) {
          this$1.do();
        }
      };

      canUseDOM && document.addEventListener('click', function (e) {
        return listener(e, this$1.$el);
      });
      this.$once('hook:beforeDestroy', function () {
        document.removeEventListener('click', function (e) {
          return listener(e, this$1.$el);
        });
      });
    }
  },
  render: function render() {
    return this.$slots.default[0];
  }
};

export default CClickOutside;
