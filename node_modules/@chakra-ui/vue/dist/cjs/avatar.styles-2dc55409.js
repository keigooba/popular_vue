
/*
 * ! @chakra-ui/vue v0.10.2 by Jonathan Bakebwa @codebender828
 * MIT License
 * https://github.com/chakra-ui/chakra-ui-vue
 */

'use strict';

var utils = require('./index-a67b3d6b.js');

/**
 * @description Converts a string variable to hex code.
 * @param {String} str
 * @note Found this on ChakraUI and StackOverflow :D
 * @returns {String}
 */

function string2Hex(str) {
  var hash = 0;

  if (str.length === 0) {
    return hash;
  }

  for (var i = 0; i < str.length; i++) {
    hash = str.charCodeAt(i) + ((hash << 5) - hash);
    hash = hash & hash;
  }

  var color = '#';

  for (var j = 0; j < 3; j++) {
    var value = hash >> j * 8 & 255;
    color += ('00' + value.toString(16)).substr(-2);
  }

  return color;
}

var avatarSizes = {
  '2xs': 4,
  xs: 6,
  sm: 8,
  md: 12,
  lg: 16,
  xl: 24,
  '2xl': 32,
  full: 'full'
};
/**
 * @description Evaluate style props for avatar
 * @param {{ size: String, name: String, showBorder: Boolean, borderColor: String, theme: Function colorMode: String }} param0
 * @returns {Object} Style props object
 */

function useAvatarStyles(ref) {
  var size = ref.size;
  var name = ref.name;
  var showBorder = ref.showBorder;
  var borderColor = ref.borderColor;
  var theme = ref.theme;
  var colorMode = ref.colorMode;
  var colors = theme.colors;
  var bg = name ? string2Hex(name) : colors.gray[400];
  var color = name ? utils.isDarkColor(bg) ? '#fff' : 'gray.800' : '#fff';
  var _borderColor = {
    light: '#fff',
    dark: 'gray.800'
  };
  var baseProps = {
    display: 'inline-flex',
    rounded: 'full',
    alignItems: 'center',
    flexShrink: '0',
    justifyContent: 'center',
    position: 'relative'
  };
  return Object.assign({}, baseProps, {
    w: avatarSizes[size],
    h: avatarSizes[size],
    bg: bg,
    color: color
  }, showBorder && {
    border: '2px',
    borderColor: borderColor || _borderColor[colorMode]
  });
}

exports.avatarSizes = avatarSizes;
exports.useAvatarStyles = useAvatarStyles;
